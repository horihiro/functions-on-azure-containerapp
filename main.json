{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.14.46.61228",
      "templateHash": "6553905649691996217"
    }
  },
  "parameters": {
    "containerAppName": {
      "type": "string",
      "defaultValue": "[format('ca-func-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Container App Name"
      }
    },
    "functionRuntime": {
      "type": "string",
      "defaultValue": "node",
      "allowedValues": [
        "dotnet",
        "dotnet-isolated",
        "node",
        "java",
        "python"
      ],
      "metadata": {
        "description": "Language of Function Worker"
      }
    },
    "containerAppEnvName": {
      "type": "string",
      "defaultValue": "[format('cae-func-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Container App Environment Name"
      }
    },
    "containerAppEnvNetworkType": {
      "type": "string",
      "defaultValue": "Public",
      "allowedValues": [
        "Public",
        "In VNet with ELB",
        "In VNet with ILB"
      ],
      "metadata": {
        "description": "Networking type for Container App Environment"
      }
    },
    "containerEnvSubnetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet ID for Container App Environment"
      }
    },
    "storageName": {
      "type": "string",
      "defaultValue": "[format('st{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Storage Account Name"
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": "[format('log-func-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Log Analytics Name"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('ai-func-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Application Insights Name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageName')]",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('storageName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageName'), 'default', format('file-share-{0}', parameters('containerAppName')))]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('logAnalyticsName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2022-10-01",
      "name": "[parameters('containerAppEnvName')]",
      "location": "[parameters('location')]",
      "properties": {
        "vnetConfiguration": "[if(equals(parameters('containerAppEnvNetworkType'), 'Public'), null(), createObject('infrastructureSubnetId', parameters('containerEnvSubnetId'), 'internal', equals(parameters('containerAppEnvNetworkType'), 'In VNet with ILB')))]",
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName')), '2022-10-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName')), '2022-10-01').primarySharedKey]"
          }
        }
      },
      "sku": {
        "name": "Consumption"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.App/managedEnvironments/storages",
      "apiVersion": "2022-10-01",
      "name": "[format('{0}/{1}', parameters('containerAppEnvName'), format('{0}-storage', parameters('containerAppName')))]",
      "properties": {
        "azureFile": {
          "accessMode": "ReadWrite",
          "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2022-09-01').keys[0].value]",
          "accountName": "[parameters('storageName')]",
          "shareName": "[format('file-share-{0}', parameters('containerAppName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', parameters('storageName'), 'default', format('file-share-{0}', parameters('containerAppName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-10-01",
      "name": "[parameters('containerAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "environmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvName'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 80
          }
        },
        "template": {
          "scale": {
            "minReplicas": 0,
            "maxReplicas": 10
          },
          "containers": [
            {
              "name": "functions-container",
              "image": "[format('mcr.microsoft.com/azure-functions/{0}:4', parameters('functionRuntime'))]",
              "volumeMounts": [
                {
                  "mountPath": "/home/site/wwwroot",
                  "volumeName": "azure-files-volume"
                }
              ],
              "env": [
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
                },
                {
                  "name": "AzureWebJobsStorage",
                  "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2022-09-01').keys[0].value)]"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "azure-files-volume",
              "storageName": "[format('{0}-storage', parameters('containerAppName'))]",
              "storageType": "AzureFile"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvName'))]",
        "[resourceId('Microsoft.App/managedEnvironments/storages', parameters('containerAppEnvName'), format('{0}-storage', parameters('containerAppName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ]
    }
  ]
}